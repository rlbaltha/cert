<?php

namespace AppBundle\Entity;

/**
 * CourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * find course by pillar
     *
     * @return Course
     */
    public function findSeminarCapstone($pillar, $level, $status) {
        $courses = $this->createQueryBuilder('c')
            ->andWhere('c.pillar = :pillar')
            ->andWhere('c.level = :level or c.level = :split')
            ->andWhere('c.status = :status')
            ->setParameter('pillar', $pillar)
            ->setParameter('level', $level)
            ->setParameter('split', 'split')
            ->setParameter('status', $status)
            ->orderBy('c.name ')
            ->getQuery()
            ->getResult();
        return $courses;
    }

    /**
     * find course by pillar
     *
     * @return Course
     */
    public function findSpheresAnchor($pillar, $level, $status) {
        $courses = $this->createQueryBuilder('c')
            ->andWhere('c.pillar = :pillar or c.pillar = :any')
            ->andWhere('c.level = :level or c.level = :split')
            ->andWhere('c.status = :status')
            ->setParameter('pillar', $pillar)
            ->setParameter('level', $level)
            ->setParameter('split', 'split')
            ->setParameter('any', 'Any')
            ->setParameter('status', $status)
            ->orderBy('c.name ')
            ->getQuery()
            ->getResult();
        return $courses;
    }

    /**
     * find course by status
     *
     * @return Course
     */
    public function findByStatus($status) {
        $courses = $this->createQueryBuilder('c')
          ->andWhere('c.status = :status')
          ->setParameter('status', $status)
          ->orderBy('c.name ')
          ->getQuery()
          ->getResult();
        return $courses;
    }

    /**
     * find course by status
     *
     * @return Course
     */
    public function findByLocation($location, $status) {
        $courses = $this->createQueryBuilder('c')
            ->andWhere('c.location = :location')
            ->andWhere('c.status = :status')
            ->setParameter('location', $location)
            ->setParameter('status', $status)
            ->orderBy('c.name ')
            ->getQuery()
            ->getResult();
        return $courses;
    }

    /**
     * find all courses
     *
     * @return Course
     */
    public function findAllSorted() {
        $courses = $this->createQueryBuilder('c')
          ->orderBy('c.name')
          ->getQuery()
          ->getResult();
        return $courses;
    }

}
